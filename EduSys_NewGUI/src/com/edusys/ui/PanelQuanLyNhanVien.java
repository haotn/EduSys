/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.dao.*;
import com.edusys.entity.*;
import com.edusys.helper.*;
import com.sun.javafx.scene.control.skin.TableHeaderRow;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author haotn
 */
public class PanelQuanLyNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form PanelQuanLyNhanVien
     */
    static JTableHeader header;
    boolean isUpdate = false;

    public PanelQuanLyNhanVien() {
        initComponents();
        setModelTable();
        fillTable();
    }

    public static void refresh() {
        fillTable();
    }

    public void setModelTable() {
        model = new DefaultTableModel(new Object[][]{}, new Object[]{"Mã nhân viên", "Họ tên nhân viên", "Vai trò"});
        tblNhanVien.setModel(model);
        header = tblNhanVien.getTableHeader();
        header.setFont(new Font("SansSerif", 1, 18));
        header.setForeground(new Color(102, 102, 102));
        tblNhanVien.setForeground(new Color(102, 102, 102));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        brgVaiTro = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        pnlFormNhanVien = new javax.swing.JPanel();
        lblVaiTro = new javax.swing.JLabel();
        txtHoTenNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        pwdXacNhanMatKhau = new javax.swing.JPasswordField();
        pwdMatKhau = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        rdoTruongPhong = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        txtTimNhanVien = new javax.swing.JTextField();
        pnlCongCuBangNhanVien = new javax.swing.JPanel();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1200, 750));
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(1200, 300));

        tblNhanVien.setAutoCreateRowSorter(true);
        tblNhanVien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tblNhanVien.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNhanVien.setGridColor(new java.awt.Color(255, 255, 255));
        tblNhanVien.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblNhanVien.setRowHeight(30);
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1200, 300));

        pnlFormNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        pnlFormNhanVien.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblVaiTro.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblVaiTro.setForeground(new java.awt.Color(102, 102, 102));
        lblVaiTro.setText("Vai trò");
        pnlFormNhanVien.add(lblVaiTro, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 50, -1));

        txtHoTenNV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pnlFormNhanVien.add(txtHoTenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 250, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Mã nhân viên");
        pnlFormNhanVien.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Họ và tên");
        pnlFormNhanVien.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Mật khẩu");
        pnlFormNhanVien.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        txtMaNV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pnlFormNhanVien.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 120, -1));

        pwdXacNhanMatKhau.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pnlFormNhanVien.add(pwdXacNhanMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 100, 230, -1));

        pwdMatKhau.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pnlFormNhanVien.add(pwdMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 230, -1));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Xác nhân mật khẩu");
        pnlFormNhanVien.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, -1));

        btnLamMoi.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnLamMoi.setForeground(new java.awt.Color(102, 102, 102));
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Icon_16px/Update.png"))); // NOI18N
        btnLamMoi.setText("Làm mới ");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        pnlFormNhanVien.add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, -1, -1));

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(102, 102, 102));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Icon_16px/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlFormNhanVien.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(102, 102, 102));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Icon_16px/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlFormNhanVien.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, -1, -1));

        btnCapNhat.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(102, 102, 102));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Icon_16px/Edit.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        pnlFormNhanVien.add(btnCapNhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, -1, -1));

        lblEmail.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(102, 102, 102));
        lblEmail.setText("Email");
        pnlFormNhanVien.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 150, 50, -1));

        txtEmail.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pnlFormNhanVien.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 150, 230, -1));

        rdoTruongPhong.setBackground(new java.awt.Color(255, 255, 255));
        brgVaiTro.add(rdoTruongPhong);
        rdoTruongPhong.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        rdoTruongPhong.setForeground(new java.awt.Color(102, 102, 102));
        rdoTruongPhong.setText("Trưởng phòng");
        pnlFormNhanVien.add(rdoTruongPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, -1, -1));

        rdoNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        brgVaiTro.add(rdoNhanVien);
        rdoNhanVien.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        rdoNhanVien.setForeground(new java.awt.Color(102, 102, 102));
        rdoNhanVien.setSelected(true);
        rdoNhanVien.setText("Nhân viên");
        pnlFormNhanVien.add(rdoNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, -1, -1));

        add(pnlFormNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 1200, 300));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Nhân viên");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));

        txtTimNhanVien.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtTimNhanVien.setForeground(new java.awt.Color(153, 153, 153));
        txtTimNhanVien.setText("Tìm kiếm nhân viên");
        txtTimNhanVien.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimNhanVienFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimNhanVienFocusLost(evt);
            }
        });
        txtTimNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimNhanVienKeyReleased(evt);
            }
        });
        add(txtTimNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 50, 250, -1));

        pnlCongCuBangNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        pnlCongCuBangNhanVien.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLast.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnLast.setForeground(new java.awt.Color(102, 102, 102));
        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlCongCuBangNhanVien.add(btnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, -1, -1));

        btnFirst.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnFirst.setForeground(new java.awt.Color(102, 102, 102));
        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/First.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlCongCuBangNhanVien.add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        btnPrev.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnPrev.setForeground(new java.awt.Color(102, 102, 102));
        btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Previous.png"))); // NOI18N
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlCongCuBangNhanVien.add(btnPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));

        btnNext.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnNext.setForeground(new java.awt.Color(102, 102, 102));
        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/images/Next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlCongCuBangNhanVien.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        add(pnlCongCuBangNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 1200, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        isUpdate = false;
        if (checkForm()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        isUpdate = true;
        if (checkForm()) {
            update();
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
        this.row = tblNhanVien.getSelectedRow();
        edit();

    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtTimNhanVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimNhanVienKeyReleased
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_txtTimNhanVienKeyReleased

    private void txtTimNhanVienFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimNhanVienFocusGained
        // TODO add your handling code here:
        focusGained();
    }//GEN-LAST:event_txtTimNhanVienFocusGained

    private void txtTimNhanVienFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimNhanVienFocusLost
        // TODO add your handling code here:
        focusLost();
    }//GEN-LAST:event_txtTimNhanVienFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup brgVaiTro;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblVaiTro;
    private javax.swing.JPanel pnlCongCuBangNhanVien;
    private javax.swing.JPanel pnlFormNhanVien;
    private javax.swing.JPasswordField pwdMatKhau;
    private javax.swing.JPasswordField pwdXacNhanMatKhau;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoTruongPhong;
    private static javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTenNV;
    private javax.swing.JTextField txtMaNV;
    private static javax.swing.JTextField txtTimNhanVien;
    // End of variables declaration//GEN-END:variables

    static DefaultTableModel model;
    static NhanVienDAO dao = new NhanVienDAO();
    int row = -1;

    public void focusGained() {
        if (txtTimNhanVien.getText().equals("Tìm kiếm nhân viên")) {
            txtTimNhanVien.setText("");
        }
        txtTimNhanVien.setForeground(Color.black);
    }

    public void focusLost() {
        if (txtTimNhanVien.getText().equals("")) {
            txtTimNhanVien.setText("Tìm kiếm nhân viên");
            txtTimNhanVien.setForeground(new Color(102, 102, 102));
        }
    }

    static public void fillTable() {
        model.setRowCount(0);
        try {
            List<NhanVien> list;
            if (txtTimNhanVien.getText().equals("") || txtTimNhanVien.getText().equals("Tìm kiếm nhân viên")) {
                list = dao.selectAll();
            } else {
                list = dao.selectByKeyWord(txtTimNhanVien.getText());
            }
            for (NhanVien nv : list) {
                if (nv.getMaNV().equals("admin")) {
                } else {
                    Object[] row = {nv.getMaNV(), nv.getHoTen(), nv.isVaiTro() ? "Trưởng phòng" : "Nhân vên"};
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    public void setForm(NhanVien nv) {
        txtMaNV.setText(nv.getMaNV());
        txtHoTenNV.setText(nv.getHoTen());
        if (nv.isVaiTro()) {
            rdoTruongPhong.setSelected(true);
        } else {
            rdoNhanVien.setSelected(true);
        }
        txtEmail.setText(nv.getEmail());
    }

    public NhanVien getForm() {
        NhanVien nv = new NhanVien();
        nv.setMaNV(txtMaNV.getText());
        nv.setHoTen(txtHoTenNV.getText());
        nv.setMatKhau(String.valueOf(pwdMatKhau.getPassword()));
        nv.setVaiTro(rdoTruongPhong.isSelected());
        nv.setEmail(txtEmail.getText());
        return nv;
    }

    public void clearForm() {
        NhanVien nv = new NhanVien();
        this.setForm(nv);
        txtHoTenNV.setText("");
        rdoNhanVien.setSelected(true);
        pwdMatKhau.setText("");
        pwdXacNhanMatKhau.setText("");
        this.row = -1;
        this.updateStatus();
    }

    public void edit() {
        String manv = (String) tblNhanVien.getValueAt(this.row, 0);
        NhanVien nv = dao.selectById(manv);
        this.setForm(nv);
        this.updateStatus();
    }

    public void insert() {
        NhanVien nv = getForm();
        try {
            dao.insert(nv);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "thêm mới thành công!");
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
    }

    public void update() {
        NhanVien nv = getForm();
        nv.setMatKhau(nv.getMaNV());
        if (MsgBox.confirm(this, "Bạn có chắc muốn cập nhật nhân viên này không?")) {
            try {
                dao.update(nv);
                this.fillTable();
                clearForm();
            } catch (Exception e) {
                System.out.println(e);
                // MsgBox.alert(this, "Cập nhật thất bại!");
            }
        }
    }

    public boolean checkForm() {
        NhanVien nv = getForm();
        if (isUpdate == false) {
            if (txtMaNV.getText().equals("") || txtHoTenNV.getText().equals("")
                    || String.valueOf(pwdMatKhau.getPassword()).equals("") || String.valueOf(pwdXacNhanMatKhau.getPassword()).equals("")||txtEmail.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin trước khi nhấn nút thêm!", "Error", 1);
                return false;
            } else if (!txtHoTenNV.getText().contains(" ")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ họ tên!", "Error", 1);
                return false;
            } else if (String.valueOf(pwdMatKhau.getPassword()).length() < 6) {
                JOptionPane.showMessageDialog(this, "Mật khẩu phải có từ 6 ký tự!", "Error", 1);
                return false;
            } else if (!String.valueOf(pwdMatKhau.getPassword()).equals(String.valueOf(pwdXacNhanMatKhau.getPassword()))) {
                JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu không đúng!", "Error", 1);
                return false;
            } else if (!PanelQuanLyNguoiHoc.validate(txtEmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email không đúng định dạng!", "Error", 1);
                return false;
            }
        } else {
            if (nv.getMaNV().equals("admin")) {
                JOptionPane.showMessageDialog(this, "Không thể thao tác với tài khoản admin!", "Error", 1);
                return false;
            }
        }
        for (int i = 0; i < dao.selectAll().size(); i++) {
            if (isUpdate == true) {
            } else {
                if (txtMaNV.getText().equals(dao.selectAll().get(i).getMaNV())) {
                    JOptionPane.showMessageDialog(this, "Mã nhân viên không được phép trùng!", "Error", 1);
                    return false;
                }
            }
        }
        return true;
    }

    public void delete() {
        if (!Auth.isManager()) {
            JOptionPane.showMessageDialog(this, "Bạn không có quyền xóa nhân viên!", "Error", 1);
        } else {
            String manv = txtMaNV.getText();
            if (manv.equals(Auth.user.getMaNV())) {
                JOptionPane.showMessageDialog(this, "Không thể xóa tài khoản đang sử dụng phần mềm!", "Error", 1);
            } else if ((dao.selectById(manv).isVaiTro() == true) && (!dao.selectById(txtMaNV.getText()).getMaNV().equals(Auth.user.getMaNV()))) {
                JOptionPane.showMessageDialog(this, "Không thể thao tác với tài khoản của trưởng phòng!", "Error", 1);
            } else if (txtMaNV.getText().equals("admin")) {
                JOptionPane.showMessageDialog(this, "Không thể xóa tài khoản admin!", "Error", 1);
            } else if (MsgBox.confirm(this, "Bạn thực sự muốn xóa nhân viên này?")) {
                try {
                    dao.delete(manv);
                    this.fillTable();
                    this.clearForm();
                } catch (Exception e) {
                    MsgBox.alert(this, "Nhân viên đã có thao tác đến dữ liệu hệ thống, không thể xóa!");
                }
            }
        }
    }

    public void first() {
        this.row = 0;
        tblNhanVien.setRowSelectionInterval(row, row);
        this.edit();
    }

    public void prev() {
        if (this.row > 0) {
            this.row--;
            tblNhanVien.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    public void next() {
        if (this.row < tblNhanVien.getRowCount() - 1) {
            this.row++;
            tblNhanVien.setRowSelectionInterval(row, row);
            this.edit();
        }
    }

    public void last() {
        this.row = tblNhanVien.getRowCount() - 1;
        tblNhanVien.setRowSelectionInterval(row, row);
        this.edit();
    }

    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblNhanVien.getRowCount() - 1);
        // Trạng thái Form
        txtMaNV.setEditable(!edit);
        pwdMatKhau.setEditable(!edit);
        pwdXacNhanMatKhau.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);
        // Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
}
